{
  "dataBindings": [
    {
      "attr": "yearmonth",
      "valueType": "String",
      "defaultValue": "2019-03"
    },
    {
      "attr": "background",
      "valueType": "Color"
    },
    {
      "attr": "textColor",
      "valueType": "Color",
      "defaultValue": "rgb(61,61,61)"
    },
    {
      "attr": "query",
      "valueType": "Multiline"
    },
    {
      "attr": "update",
      "valueType": "Function",
      "defaultValue": "__ht__function update(data, valueObj) {\r\n    //此函数需要应用程序在收到后台查询结果后主动调用，并传入对应的参数\r\n    //data:当前关联的ht Data对象\r\n    //valueObj:后台根据当前对象自定义属性query的设置值的查询结果，类型为JSON\r\n    console.log(data);\r\n    console.log(valueObj);\r\n}"
    },
    {
      "attr": "data",
      "valueType": "ObjectArray",
      "defaultValue": [
        {
          "time": "2019-03-01",
          "value": 1713
        },
        {
          "time": "2019-03-02",
          "value": 6892
        },
        {
          "time": "2019-03-03",
          "value": 4863
        },
        {
          "time": "2019-03-04",
          "value": 8613
        },
        {
          "time": "2019-03-05",
          "value": 3304
        },
        {
          "time": "2019-03-06",
          "value": 1560
        },
        {
          "time": "2019-03-07",
          "value": 9465
        },
        {
          "time": "2019-03-08",
          "value": 6077
        },
        {
          "time": "2019-03-09",
          "value": 5679
        },
        {
          "time": "2019-03-10",
          "value": 2253
        },
        {
          "time": "2019-03-11",
          "value": 5454
        },
        {
          "time": "2019-03-12",
          "value": 8429
        },
        {
          "time": "2019-03-13",
          "value": 968
        },
        {
          "time": "2019-03-14",
          "value": 9957
        },
        {
          "time": "2019-03-15",
          "value": 9336
        },
        {
          "time": "2019-03-16",
          "value": 1468
        },
        {
          "time": "2019-03-17",
          "value": 8723
        },
        {
          "time": "2019-03-18",
          "value": 5239
        },
        {
          "time": "2019-03-19",
          "value": 7124
        },
        {
          "time": "2019-03-20",
          "value": 7511
        },
        {
          "time": "2019-03-21",
          "value": 7240
        },
        {
          "time": "2019-03-22",
          "value": 8964
        },
        {
          "time": "2019-03-23",
          "value": 7165
        },
        {
          "time": "2019-03-24",
          "value": 3673
        },
        {
          "time": "2019-03-25",
          "value": 3014
        },
        {
          "time": "2019-03-26",
          "value": 2777
        },
        {
          "time": "2019-03-27",
          "value": 3852
        },
        {
          "time": "2019-03-28",
          "value": 9707
        },
        {
          "time": "2019-03-29",
          "value": 9593
        },
        {
          "time": "2019-03-30",
          "value": 4551
        },
        {
          "time": "2019-03-31",
          "value": 4447
        }
      ]
    },
    {
      "attr": "min",
      "valueType": "Number",
      "defaultValue": 0
    },
    {
      "attr": "max",
      "valueType": "Number",
      "defaultValue": 10000
    },
    {
      "attr": "rangeColor",
      "valueType": "ColorArray"
    },
    {
      "attr": "calendarBackgroundColor",
      "valueType": "Color",
      "defaultValue": "#f2f2f2"
    },
    {
      "attr": "calendarOpacity",
      "valueType": "Number",
      "defaultValue": 1
    },
    {
      "attr": "calendarBorderWidth",
      "valueType": "PositiveNumber",
      "defaultValue": 0.2
    },
    {
      "attr": "calendarBorderColor",
      "valueType": "Color",
      "defaultValue": "#ccc"
    },
    {
      "attr": "calendarColor",
      "valueType": "Color",
      "defaultValue": "rgb(247,247,247)"
    },
    {
      "attr": "calendarFontSize",
      "valueType": "PositiveNumber",
      "defaultValue": 15
    },
    {
      "attr": "themes",
      "valueType": "StringArray",
      "defaultValue": [
        "default",
        "light",
        "dark",
        "vintage",
        "roma",
        "shine",
        "infographic",
        "macarons"
      ]
    },
    {
      "attr": "theme",
      "valueType": "String",
      "defaultValue": "shine"
    }
  ],
  "snapshotURL": "symbols/JET/snapshot/snapshot_echarts-month.json",
  "renderHTML": "__ht__function(data, gv, cache) {\r\n\r\n    var rangeColor = data.a('rangeColor');\r\n    var rangeColorObj = null;\r\n    if (rangeColor != null && rangeColor.length > 0) {\r\n        rangeColorObj = {\r\n            color: rangeColor //['#e0ffff', '#006edd'],\r\n            // opacity: 0.3\r\n        };\r\n    }\r\n\r\n    var dateList = data.a('data');\r\n\r\n    var dateArray = [];\r\n    var dateArray2 = [];\r\n    if (dateList != null && dateList.length > 0) {\r\n        for (var i = 0; i < dateList.length; i++) {\r\n            if (dateList[i] != null && dateList[i] !== undefined && dateList[i].time !== undefined && dateList[i].time != null) {\r\n                dateArray.push([\r\n                    dateList[i].time,\r\n                    dateList[i].value\r\n                ]);\r\n                dateArray2.push([\r\n                    dateList[i].time,\r\n                    dateList[i].value==null?0:dateList[i].value==null\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n\r\n    var min = data.a('min');\r\n    var max = data.a('max');\r\n    // if (dateList != null && dateList.length > 0) {\r\n    //     for (var i = 0; i < dateList.length; i++) {\r\n    //         if (min > dateList[i].value) {\r\n    //             min = dateList[i].value;\r\n    //         }\r\n    //         if (max < dateList[i].value) {\r\n    //             max = dateList[i].value;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    var option = {\r\n        title: {\r\n            top: 0,\r\n            left: 'center',\r\n            text: data.a('yearmonth'),\r\n            textStyle: {\r\n                color: data.a('textColor')\r\n            }\r\n        },\r\n        backgroundColor: data.a('background'),\r\n        textStyle: {\r\n            color: data.a('textColor')\r\n        },\r\n        legend: {\r\n            bottom: 0,\r\n            textStyle: {\r\n                color: data.a('textColor')\r\n            }\r\n        },\r\n        tooltip: {\r\n        },\r\n        visualMap: {\r\n            min: min,\r\n            max: max,\r\n            type: 'piecewise',\r\n            orient: 'horizontal',\r\n            left: 'center',\r\n            bottom: 10,\r\n            textStyle: {\r\n                color: data.a('textColor')\r\n            },\r\n            inRange: rangeColorObj\r\n        },\r\n        calendar: {\r\n            orient: 'vertical',\r\n            range: data.a('yearmonth'),\r\n            top: 60,\r\n            bottom: 40,\r\n            left: 10,\r\n            right: 10,\r\n            cellSize: [35, 35],\r\n            itemStyle: {\r\n                borderWidth: data.a('calendarBorderWidth'),\r\n                borderColor: data.a('calendarBorderColor'),\r\n                color: data.a('calendarBackgroundColor'),\r\n                opacity: data.a('calendarOpacity')\r\n            },\r\n            yearLabel: { \r\n                show: false,\r\n                position: 'top',\r\n                margin: 40,\r\n                color: data.a('textColor')\r\n            },\r\n            monthLabel: {\r\n                show: false,\r\n                position: 'end',\r\n                // nameMap: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\r\n                nameMap: 'cn',\r\n                color: data.a('textColor')\r\n            },\r\n            dayLabel: {\r\n                margin: 5,\r\n                firstDay: 1,\r\n                //nameMap: ['日', '一', '二', '三', '四', '五', '六'],  \r\n                nameMap: 'cn',\r\n                color: data.a('textColor')\r\n            },\r\n        },\r\n        series: [{\r\n            type: 'heatmap',\r\n            coordinateSystem: 'calendar',\r\n            data: dateArray\r\n        },\r\n        {\r\n            type: 'scatter',\r\n            coordinateSystem: 'calendar',\r\n            symbolSize: 1,\r\n            label: {\r\n                show: true,\r\n                formatter: function (params) {\r\n                    var d = echarts.number.parseDate(params.value[0]);\r\n                    // return d.getDate() + '\\n\\n' + params.value[1];\r\n                    return d.getDate();\r\n                },\r\n                color: data.a('calendarColor'),\r\n                fontSize: data.a('calendarFontSize')\r\n            },\r\n            data: dateArray2\r\n        }\r\n        ]\r\n    \r\n    };\r\n\r\n    if (!cache.htmlView) {\r\n        cache.htmlView = document.createElement('div');\r\n        cache.htmlView.style.position = 'absolute';\r\n        cache.htmlChart = echarts.init(cache.htmlView, data.a('theme'));\r\n\r\n        // layoutHTML will be called when the data needs to be drawing\r\n        cache.htmlView.layoutHTML = function () {\r\n            gv.layoutHTML(data, cache.htmlView, false);\r\n            cache.htmlChart.resize();\r\n        };\r\n    }\r\n\r\n    cache.htmlChart.setOption(option);\r\n\r\n    // html for showing\r\n    return cache.htmlView;\r\n}",
  "width": 550,
  "height": 450,
  "fitSize": true,
  "pixelPerfect": false,
  "comps": []
}